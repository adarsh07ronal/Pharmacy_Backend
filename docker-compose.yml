version: '3.7'

services:
  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - 80:80
  #     - 443:443
  #   depends_on:
  #     - web
  #   restart: always
  #   networks:
  #     - main
  #   volumes:
  #     - ./nginx/conf:/etc/nginx/conf.d
  #     - ./certbot/www:/var/www/certbot/
  #     - ./certbot/conf/:/etc/nginx/ssl/
  #     - staticfiles:/usr/src/pharmacy/collected_static/
  # certbot:
  #   image: certbot/certbot:latest
  #   depends_on:
  #     - nginx
  #   #command: certonly --webroot --webroot-path=/var/www/certbot --email django.work@gmail.com --agree-tos --no-eff-email -d dev-pharmacy.eoraa.com
  #   #command: renew --dry-run
  #   volumes:
  #       - ./certbot/www/:/var/www/certbot/:rw
  #       - ./certbot/conf/:/etc/letsencrypt/:rw
  #       # - ./certbot/conf:/etc/letsencrypt
  #       # - ./certbot/logs:/var/log/letsencrypt
  #       # - ./certbot/data:/var/www/certbot

  web:
    build: .
    command: bash -c "python manage.py collectstatic --noinput && gunicorn pharmacy.wsgi:application --workers 3 --timeout 500 --bind 0.0.0.0:5000 --log-level debug"
    volumes:
      - .:/usr/src/pharmacy/
      - staticfiles:/usr/src/pharmacy/collected_static/
      - media:/usr/src/pharmacy/media
    expose:
      - 5000
    ports:
      - 5000:5000
    env_file:
      - ./env.prod
    depends_on:
      - db
    networks:
      - main
  # db:
  #   restart: always
  #   image: postgres:13-buster
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  #     - ./postgres_scripts:/docker-entrypoint-initdb.d
  #   environment:
  #     - POSTGRES_USER=pharmacy
  #     - POSTGRES_PASSWORD=pharmacy123
  #     - POSTGRES_DB=pharmacy
  #   ports:
  #       - "5432:5432"
  #   networks:
  #     - main

  # pgadmin:
  #     image: dpage/pgadmin4
  #     container_name: demo-pgadmin 
  #     depends_on:
  #       - db
  #     ports:
  #       - "5051:80"
  #     environment:
  #       PGADMIN_DEFAULT_EMAIL: biren@eoraa.com
  #       PGADMIN_DEFAULT_PASSWORD: root
  #     restart: always

  redis:
    image: redis:buster
    volumes:
      - /var/lib/redis/data/
    networks:
      - main

  celery:
    restart: always
    build:
      context: .
    command: celery -A pharmacy worker -l info -B --uid=nobody
    volumes:
      - .:/usr/src/pharmacy/
    env_file:
      - ./env.prod
    depends_on:
      - db
      - redis
      - web
    networks:
      - main

  # esearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
  #   container_name: elasticsearch
  #   environment:
  #     - xpack.security.enabled=false
  #     - discovery.type=single-node
  #     # - "ES_JAVA_OPTS=-Xms4g -Xmx4g -XX:-UseConcMarkSweepGC"
  #     # - "ES_JAVA_OPTS=-Xms512m -Xmx512m -XX:-UseConcMarkSweepGC -XX:-UseCMSInitiatingOccupancyOnly -XX:+UseG1GC -XX:InitiatingHeapOccupancyPercent=75"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #     nofile:
  #       soft: 65536
  #       hard: 65536
  #   cap_add:
  #     - IPC_LOCK
  #   volumes:
  #     - elasticsearch-data:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200
  #     - 9300:9300
  #   networks:
  #     - elk

volumes:
  media:
  staticfiles:
  # elasticsearch-data:
  # postgres_data:
  #   driver: local

networks:
  main:
  # elk:
